---
import { actions } from "astro:actions";
import { VIDEO_SOURCE } from "@/constants/cookie-names";
import { type ValidVideoSourceType } from "@/types";

// import log from "@/page-templates/index/_log.ts";

import Layout from "@/layouts/layout.astro";
import Block from "@/components/block.astro";
import Player from "./_components/player";

import getDateString from "@/utils/get-date-string";
import prettifyTitle from "@/utils/prettify-title";
import getVideoListPageLink from "@/utils/get-video-list-page-link";

// ============================================================================

if (!Astro.params.slug) return Astro.redirect("/videos");

const { data: video, error: error } = await Astro.callAction(
    actions.watchPageFetch,
    Astro.params.slug
);
if (error) {
    Astro.response.status = 500;
    Astro.props.error = error;
    return Astro.rewrite("/500");
}

const selectedVideoSource = Astro.cookies.get(VIDEO_SOURCE)
    ?.value as ValidVideoSourceType;

// console.log(video);
---

<Layout
    title={prettifyTitle(video.title)}
    contentType="video-player"
    showHeader
    showFooter
>
    <section class="player-container">
        <Player
            links={video.links}
            title={video.title}
            cover={video.cover}
            selectedVideoSource={selectedVideoSource}
            client:load
        />
    </section>
    <Block class="infos">
        <p>
            {
                video.tags?.map(({ _id, slug, label }) => (
                    <a href={getVideoListPageLink("tag", slug || _id)}>
                        {label}
                    </a>
                ))
            }
        </p>
        <h1>{prettifyTitle(video.title)}</h1>
        <p>{getDateString(new Date(video.release))}</p>

        <hr />

        <section>{video.description}</section>
        <section>
            <h4>相关机型系列</h4>
            <p>
                {
                    video.aircraft_families?.map(
                        ({ _id, slug, maker, name }) => (
                            <a
                                href={getVideoListPageLink(
                                    "aircraftFamily",
                                    slug || _id
                                )}
                            >
                                <span>{maker}</span> {name}
                            </a>
                        )
                    )
                }
            </p>
        </section>
        <section>
            <h4>相关机场</h4>
            <p>
                {
                    video.aerodromes?.map(({ _id, slug, icao, iata, name }) => (
                        <a
                            href={getVideoListPageLink(
                                "aerodrome",
                                slug || _id
                            )}
                        >
                            <span>
                                {icao} / {iata}
                            </span>{" "}
                            {name}
                        </a>
                    ))
                }
            </p>
        </section>
        <section>
            <h4>相关开发商</h4>
            <p>
                {
                    video.developers?.map(({ _id, slug, name }) => (
                        <a
                            href={getVideoListPageLink(
                                "developer",
                                slug || _id
                            )}
                        >
                            {name}
                        </a>
                    ))
                }
            </p>
        </section>
        <section>
            <h4>相关平台</h4>
            <p>
                {
                    video.games?.map(({ _id, slug, name }) => (
                        <a href={getVideoListPageLink("platform", slug || _id)}>
                            {name}
                        </a>
                    ))
                }
            </p>
        </section>
        <section>
            <h4>相关平台更新</h4>
            <p>
                {
                    video.msfs_updates?.map(
                        ({ _id, slug, game, series, number, release }) => (
                            <a
                                href={getVideoListPageLink(
                                    "platformUpdate",
                                    slug || _id
                                )}
                            >
                                <span>{game}</span> {series} {number} {release}
                            </a>
                        )
                    )
                }
            </p>
        </section>

        <hr />

        <section>参与讨论 @ ???</section>

        <aside>设置：视频源</aside>
    </Block>
</Layout>

<style lang="less">
    @import "@/utils/mixins.less";

    .player-container {
        --player-height-shrink: 0px;
        --player-aspect-ratio: 16/9;
        --player-min-height: 300px;
        --player-max-height: calc(100dvh - var(--global-header-height) * 4);

        position: relative;
        z-index: 2;
        background: #000;
        width: 100%;
        user-select: none;

        @media (aspect-ratio <= @video-player-sticky-screen-aspect-ratio) {
            position: sticky;
            top: var(--global-sticky-top);
        }

        // &::after {
        //     content: "";
        //     position: absolute;
        //     bottom: -1px;
        //     height: 1px;
        //     left: 0;
        //     right: 0;
        //     background: var(--border-color);
        // }
    }

    .infos {
        position: relative;
        z-index: 1;
        user-select: auto;
    }
</style>
