---
import { actions } from "astro:actions";
import { type ValueOf } from "@/types";
import VideoListHorizontal from "@/components/video-list-horizontal.tsx";
import getVideoItemTopTag from "@/utils/get-video-item-top-tag";
import getVideoListPageLink from "@/utils/get-video-list-page-link";

type Props = {
    name: string;
    route?: string;
    title: string;
    videos?: ValueOf<
        Exclude<
            Awaited<ReturnType<typeof actions.homePageFetch>>["data"],
            undefined
        >
    >;
    showMore?: boolean;
    highlighted?: boolean;
};
const { showMore = true } = Astro.props;
---

<dl
    class:list={[
        "collection",
        {
            "mod-highlight": Astro.props.highlighted,
        },
    ]}
    data-collection={Astro.props.name}
>
    <dt>
        <h3>
            <a
                href={`${getVideoListPageLink()}${Astro.props.route ? `/${Astro.props.route}` : ""}`}
            >
                {Astro.props.title}
            </a>
        </h3>
        {
            showMore && (
                <a
                    href={`${getVideoListPageLink()}${Astro.props.route ? `/${Astro.props.route}` : ""}`}
                >
                    更多
                </a>
            )
        }
    </dt>
    <dd>
        {
            !Astro.props.videos ||
            !Array.isArray(Astro.props.videos) ||
            Astro.props.videos.length < 1 ? (
                <slot />
            ) : (
                <VideoListHorizontal
                    client:idle
                    videos={Astro.props.videos.map((post) => ({
                        cmsId: post._id,
                        slug: post.slug,
                        title: post.title,
                        cover: post.cover,
                        duration: post.duration,
                        infos: [
                            [
                                getVideoItemTopTag(
                                    post,
                                    Astro.props.name === "tutorials"
                                        ? "tutorial"
                                        : Astro.props.name === "reviews"
                                          ? "review"
                                          : (Astro.props.name as Parameters<
                                                typeof getVideoItemTopTag
                                            >[1])
                                )?.name || "",
                                new Date(post.release),
                            ].filter(Boolean),
                        ],
                    }))}
                />
            )
        }
    </dd>
</dl>

<style lang="less">
    @import "@/utils/mixins.less";

    .collection {
        --margin-bottom: 5em;

        display: block;
        position: relative;
        margin-bottom: var(--margin-bottom);

        &::after {
            content: "";
            position: absolute;
            bottom: calc(var(--margin-bottom) / -2);
            height: 1px;
            left: 0;
            right: 0;
            background: var(--border-color);
        }

        & > dt,
        & > dd {
            position: relative;
            padding: 0;
        }
        & > dt {
            display: flex;
            flex-flow: row nowrap;
            justify-content: space-between;
            align-items: flex-end;
            margin: 0 0 1em 0;
            & > h3 {
                display: block;
                flex: 1;
                margin: 0;
                font-size: 1.25em;
            }
            a {
                --arrow-line-width: 2px;
                --arrow-translate-x: -10px;
                --arrow-opacity: 0;
                display: inline-block;
                position: relative;
                color: var(--text-color-primary);
                text-decoration: none;
                transition-property:
                    color, transform, opacity, background-color;
                &::before,
                &::after {
                    content: "";
                    position: absolute;
                    z-index: -1;
                    top: 50%;
                    right: -0.4em;
                    border: var(--arrow-line-width) solid currentColor;
                    width: 0.5em;
                    height: 0.5em;
                    margin-top: -0.125em;
                    border-left-width: 0;
                    border-bottom-width: 0;
                    opacity: var(--arrow-opacity);
                    transform-origin: 100% 100%;
                    transform: translateX(var(--arrow-translate-x))
                        rotate(45deg);
                    transition: inherit;
                    transition-property: transform, opacity;
                }
                &::before {
                }
                &::after {
                    --arrow-line-width: 1px;
                    border-color: var(--text-color-secondary);
                    right: calc(-0.4em - 5px);
                }
                &:hover {
                    --arrow-translate-x: 0;
                    --arrow-opacity: 1;
                }
            }
            & > a {
                white-space: nowrap;
                color: var(--text-color-secondary);
                &:hover {
                    color: var(--text-color-primary);
                }
            }
        }
        & > dd {
            margin: 0;
        }
    }

    .collection:has(+ .mod-highlight) {
        margin-bottom: calc(var(--margin-bottom) / 1.5);
        &::after {
            display: none;
        }
    }

    .collection.mod-highlight {
        --collection-background-color: var(--menu-background-color-highlight);
        --collection-background-color: color-mix(
            in hsl,
            var(--theme-color),
            var(--accent-color-teal) 25%
        );

        background: var(--collection-background-color);
        padding: 1.5em var(--global-edge-safe-distance) 1.75em
            var(--global-edge-safe-distance);
        border-radius: 10px;
        margin-left: calc(var(--global-edge-safe-distance) * -1);
        margin-right: calc(var(--global-edge-safe-distance) * -1);
        margin-bottom: calc(var(--margin-bottom) / 1.25);
        &::after {
            display: none;
        }
        // &::before {
        //     content: "";
        //     position: absolute;
        //     top: 0;
        //     bottom: 0;
        //     left: 0;
        //     right: 0;
        //     z-index: -1;
        //     background: var(--accent-color-teal);
        //     border-radius: inherit;
        //     opacity: 0.1;
        // }
        .screen-lg-below({
            border-radius: 0;
        });
    }
</style>
