---
import { actions } from "astro:actions";

// import log from "@/page-templates/index/_log.ts";

import Layout from "@/layouts/layout.astro";
import Block from "@/components/block.astro";
// import VideoListHorizontal from "@/components/video-list-horizontal.tsx";
import TagButton from "@/components/tag-button.astro";

// import getVideoItemTopTag from "@/utils/get-video-item-top-tag";
import getVideoListPageLink from "@/utils/get-video-list-page-link";

import Collection from "./homepage/collection.astro";
import CollectionSpotlight from "./homepage/collection-spotlight.astro";

// ============================================================================
//
// 语言包相关
// - 这些信息来自之前的项目
// - 本项目暂未启用多语言
//
// `Astro.currentLocale` 为本次访问的语言 ID
//  - 在所有 `page` `endpoint` 和 `context` 中均会存在，可直接使用
//
// `Astro.locals.global` 为全局通用信息语言包，即 CMS 中的 `通用信息` 结构体
//  - 在所有 `page` `endpoint` 和 `context` 中均会存在，可直接使用
//
// `getLocale` 这一 _Action_ 为获取语言包内容的请求
//  - 传入的参数中 `cmsStructureId` 为 CMS 中结构体 ID
//  - 组件内自行决定返回的对象如何使用
//      - 本例中，向所有子组件传入名为 `_` 的属性，作为语言包内容
//
// ============================================================================

// const currentLocale = (Astro.currentLocale || "") as LocaleType;
// const {
//     data: _ = {},
//     // error: _error
// } = await Astro.callAction(actions.getLocale, {
//     locale: currentLocale,
//     cmsStructureId: 536,
// });
// if (_error) {
//     Astro.props.error = _error;
//     return Astro.rewrite("/500");
// }

// Astro.locals.page = _;
// log("locales %O", _);
// log(sparringSampleList);
// log({ error });

// ============================================================================
//
// 获取首页视频内容
//
// ============================================================================

const { data: collections, error: error } = await Astro.callAction(
    actions.homePageFetch,
    undefined
);
if (error) {
    Astro.response.status = 500;
    Astro.props.error = error;
    return Astro.rewrite("/500");
}
---

<Layout showHeader showBanner showFooter>
    <Block class="home-page">
        <Collection
            name="latest"
            title="最新视频"
            videos={collections?.["latest"]}
        />

        <CollectionSpotlight />

        {
            [
                ["tutorials", "模拟飞行教学视频", "tag-tutorial"],
                ["news", "模拟飞行资讯视频", "tag-news"],
                ["reviews", "模拟飞行评测视频", "tag-review"],
                ["world", "航空专题视频", "tag-world"],
            ].map(([collectionName, title, routeName]) => (
                <Collection
                    name={collectionName}
                    route={routeName}
                    title={title}
                    videos={collections?.[collectionName]}
                />
            ))
        }

        <section class="check-more">
            <TagButton href={getVideoListPageLink()}>分类浏览更多视频</TagButton
            >
            <!-- TOOD: SEARCH -->
            {
                import.meta.env.DEV && (
                    <TagButton href="/search">搜索视频</TagButton>
                )
            }
        </section>
    </Block>
</Layout>

<style lang="less">
    @import "@/utils/mixins.less";

    .home-page {
        // .font-size-clamp-with-line-height(40px, 60px);
        padding-top: 1em;
        padding-bottom: 2em;
    }

    .check-more {
        text-align: center;
        margin-bottom: 3em;
        a {
            font-size: 1.133333em;
            border-radius: 100em;
            padding: 0.3333em 1.6667em;
            &:has(+ a) {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
                padding-right: 1.3333em;
            }
            & + a {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                padding-left: 1.3333em;
            }
        }
    }
</style>
