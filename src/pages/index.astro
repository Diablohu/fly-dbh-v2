---
import { actions } from "astro:actions";

// import log from "@/page-templates/index/_log.ts";

import Layout from "@/layouts/layout.astro";
import Block from "@/components/block.astro";
import VideoListHorizontal from "@/components/video-list-horizontal.tsx";

// ============================================================================
//
// 语言包相关
// - 这些信息来自之前的项目
// - 本项目暂未启用多语言
//
// `Astro.currentLocale` 为本次访问的语言 ID
//  - 在所有 `page` `endpoint` 和 `context` 中均会存在，可直接使用
//
// `Astro.locals.global` 为全局通用信息语言包，即 CMS 中的 `通用信息` 结构体
//  - 在所有 `page` `endpoint` 和 `context` 中均会存在，可直接使用
//
// `getLocale` 这一 _Action_ 为获取语言包内容的请求
//  - 传入的参数中 `cmsStructureId` 为 CMS 中结构体 ID
//  - 组件内自行决定返回的对象如何使用
//      - 本例中，向所有子组件传入名为 `_` 的属性，作为语言包内容
//
// ============================================================================

// const currentLocale = (Astro.currentLocale || "") as LocaleType;
// const {
//     data: _ = {},
//     // error: _error
// } = await Astro.callAction(actions.getLocale, {
//     locale: currentLocale,
//     cmsStructureId: 536,
// });
// if (_error) {
//     Astro.props.error = _error;
//     return Astro.rewrite("/500");
// }

// Astro.locals.page = _;
// log("locales %O", _);
// log(sparringSampleList);
// log({ error });

// ============================================================================
//
// 获取首页视频内容
//
// ============================================================================

const { data: collections, error: error } = await Astro.callAction(
    actions.homePageFetch,
    undefined
);
if (error) {
    Astro.response.status = 500;
    Astro.props.error = error;
    return Astro.rewrite("/500");
}
---

<Layout showHeader showBanner showFooter>
    <Block class="home-page">
        {
            [
                ["latest", "最新视频"],
                ["tutorials", "模拟飞行教学视频", "training"],
                ["news", "模拟飞行资讯视频", "news"],
                ["reviews", "模拟飞行评测视频", "benchmark"],
                ["world", "航空专题视频", "world"],
            ].map(([collectionName, title, tagName]) => (
                <dl class="collection" data-collection={collectionName}>
                    <dt>
                        <h3>
                            <a href={`/videos${tagName ? `/${tagName}` : ""}`}>
                                {title}
                            </a>
                        </h3>
                        <a href={`/videos${tagName ? `/${tagName}` : ""}`}>
                            更多
                        </a>
                    </dt>
                    <dd>
                        <VideoListHorizontal
                            client:idle
                            videos={collections[collectionName].map((post) => ({
                                cmsId: post._id,
                                slug: post.slug,
                                title: post.title,
                                cover: post.cover,
                                tags:
                                    collectionName === "latest"
                                        ? [post.tags[0].label]
                                        : collectionName === "tutorials"
                                          ? [
                                                post.tags.filter((tag) =>
                                                    [
                                                        "aircraft",
                                                        "tip",
                                                        "aviation",
                                                    ].includes(tag.value)
                                                )[0]?.label,
                                            ].filter(Boolean)
                                          : [],
                                infos: [new Date(post.release)],
                            }))}
                        />
                    </dd>
                </dl>
            ))
        }
    </Block>
</Layout>

<style lang="less">
    @import "@/utils/mixins.less";

    .home-page {
        // .font-size-clamp-with-line-height(40px, 60px);
        padding-top: 1em;
        padding-bottom: 2em;
    }

    .collection {
        display: block;
        position: relative;
        margin-bottom: 5em;
        &::after {
            content: "";
            position: absolute;
            bottom: -2.5em;
            height: 1px;
            left: 0;
            right: 0;
            background: var(--border-color);
        }

        a {
            display: inline-block;
            position: relative;
            color: var(--text-color-primary);
            text-decoration: none;
            transition-property: color, transform, opacity;
            // &:hover {
            //     color: var(--text-color-primary);
            // }
            &:active {
                transform: translateY(2px);
            }
        }

        & > dt,
        & > dd {
            position: relative;
            padding: 0;
        }
        & > dt {
            display: flex;
            flex-flow: row nowrap;
            justify-content: space-between;
            align-items: flex-end;
            margin: 0 0 1em 0;
            & > h3 {
                display: block;
                flex: 1;
                margin: 0;
                font-size: 1.25em;
            }
            & > a {
                white-space: nowrap;
                color: var(--text-color-secondary);
                &:hover {
                    color: var(--text-color-primary);
                }
            }
            a {
                --arrow-line-width: 2px;
                --arrow-translate-x: -10px;
                --arrow-opacity: 0;
                &::before,
                &::after {
                    content: "";
                    position: absolute;
                    z-index: -1;
                    top: 50%;
                    right: -0.4em;
                    border: var(--arrow-line-width) solid currentColor;
                    width: 0.5em;
                    height: 0.5em;
                    margin-top: -0.125em;
                    border-left-width: 0;
                    border-bottom-width: 0;
                    opacity: var(--arrow-opacity);
                    transform-origin: 100% 100%;
                    transform: translateX(var(--arrow-translate-x))
                        rotate(45deg);
                    transition: inherit;
                    transition-property: transform, opacity;
                }
                &::before {
                }
                &::after {
                    --arrow-line-width: 1px;
                    border-color: var(--text-color-secondary);
                    right: calc(-0.4em - 5px);
                }
                &:hover {
                    --arrow-translate-x: 0;
                    --arrow-opacity: 1;
                }
            }
        }
        & > dd {
            margin: 0;
        }
    }
</style>
