---
import { ClientRouter } from "astro:transitions";

import { gtag as gtagId, gtm as gtmId } from "@/constants/google-analytics";
import { VIDEO_SOURCE, FORCE_COLOR_SCHEME, CONTENT_LIST_AUTO_LOAD_MORE } from "@/constants/cookies";
import {
    type ValidVideoSourceType,
    type ValidContentListAutoLoadMoreType,
    type ValidPageContentType,
} from "@/types";

import LogoSVG from "@/assets/logo.svg";
import HeadPageInfos from './_components/head-page-infos.astro';
import BannerAndHeader from "./_components/banner-and-header";
import Navbar from "./_components/navbar.astro";
import Announcements from "./_components/announcements.astro";
import PrepareClient from "./_components/prepare-client";
import Footer from './_components/footer.astro'

import { themeColorLight, themeColorDark, title } from "@/global";
import "@/global.less";

// ============================================================================

interface Props {
    /**
     * 网页标题
     * - 默认为兜底文字
     */
    title?: string;
    /**
     * 头部 Meta 信息 `keyword`
     * - 默认为兜底文字
     */
    keywords?: string;
    /**
     * 头部 Meta 信息 `description`
     * - 默认无内容
     */
    description?: string;

    /**
     * 用于社交分享 & 控制细节样式
     *  - `<html>` 标签会有 `data-content-type` 属性，若组件需要响应内容类型，可基于此做 CSS 选择器，如
     *      - `:root[data-content-type="video-player"] .logo { opacity: 0.5 }`
     */
    contentType?: ValidPageContentType;
    /** 用于社交分享 */
    coverImage?: string;
    coverImageWidth?: number;
    coverImageHeight?: number;

    /**
     * 是否显示顶部导航条
     * - 默认隐藏
     */
    showHeader?: boolean;

    /**
     * 是否显示 Banner
     * - 默认隐藏
     */
    showBanner?: boolean;

    /**
     * 是否显示全局页底
     * - 默认隐藏
     */
    showFooter?: boolean;
}

// ============================================================================
//
// 多语言 & 语言包
//
// ============================================================================

// const _ = Astro.locals.global;
// const currentLocale = Astro.currentLocale || "";
// const { gtag: gtagId, gtm: gtmId } = getGoogleAnalyticsIds(
//     Astro.currentLocale as LocaleType
// );
// console.log(Astro.locals.global);

// ============================================================================

const {
    showHeader = false,
    showBanner = false,
    showFooter = false,
} = Astro.props;

const forcedColorScheme = Astro.cookies.get(FORCE_COLOR_SCHEME)?.value;
const contentListAutoLoadMore = Astro.cookies.get(CONTENT_LIST_AUTO_LOAD_MORE)?.value;
---

<!doctype html>
<html
    lang={Astro.currentLocale || 'zh'}
    data-content-type={Astro.props.contentType}
    class:list={[
        forcedColorScheme ? `force-color-scheme-${forcedColorScheme}` : ''
    ]}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        {forcedColorScheme === 'dark'
            ? <meta
                name="theme-color"
                content={themeColorDark}
            />
            : forcedColorScheme === 'light'
            ? <meta
                name="theme-color"
                content={themeColorLight}
            />
            : (<Fragment>
                    <meta
                    name="theme-color"
                    content={themeColorLight}
                    media="(prefers-color-scheme: light)"
                />
                <meta
                    name="theme-color"
                    content={themeColorDark}
                    media="(prefers-color-scheme: dark)"
                />
            </Fragment>)
        }

        <HeadPageInfos
            title={Astro.props.title}
            type={Astro.props.contentType}
            description={Astro.props.description}
            keywords={Astro.props.keywords}
            image={Astro.props.coverImage}
            imageWidth={Astro.props.coverImageWidth}
            imageHeight={Astro.props.coverImageHeight}
        />

        <!-- Google Tag Manager -->
        {gtmId && (
            <script is:inline async defer define:vars={{ gtmId }}>
                (function (w, d, s, l, i) {
                    w[l] = w[l] || [];
                    w[l].push({
                        "gtm.start": new Date().getTime(),
                        event: "gtm.js",
                    });
                    var f = d.getElementsByTagName(s)[0],
                        j = d.createElement(s),
                        dl = l != "dataLayer" ? "&l=" + l : "";
                    j.async = true;
                    j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
                    f.parentNode.insertBefore(j, f);
                })(window, document, "script", "dataLayer", gtmId);
            </script>
        )}
        <!-- End Google Tag Manager -->

        <base target="_self" />
        <link rel="icon" href="/favicon.ico" sizes="any">
        <link rel="icon" href="/favicon.svg" type="image/svg+xml">
        <link rel="manifest" href="/manifest.json">
        <link
            rel="alternate"
            type="application/rss+xml"
            title={title + ' 最新模拟飞行视频'}
            href={new URL("/feed.xml", Astro.url)}
        />

        <meta name="generator" content={Astro.generator} />

        <style
            is:inline
            set:html={`
:root {
    --light-theme-color: ${themeColorLight};
    --light-theme-color-p-20: ${themeColorLight}33;
    --light-theme-color-p-30: ${themeColorLight}4d;
    --light-theme-color-p-40: ${themeColorLight}66;
    --light-theme-color-p-50: ${themeColorLight}80;
    --light-theme-color-p-60: ${themeColorLight}99;
    --light-theme-color-p-70: ${themeColorLight}b3;
    --light-theme-color-p-80: ${themeColorLight}cc;
    --light-theme-color-p-90: ${themeColorLight}e6;
    --dark-theme-color: ${themeColorDark};
    --dark-theme-color-p-20: ${themeColorDark}33;
    --dark-theme-color-p-30: ${themeColorDark}4d;
    --dark-theme-color-p-40: ${themeColorDark}66;
    --dark-theme-color-p-50: ${themeColorDark}80;
    --dark-theme-color-p-60: ${themeColorDark}99;
    --dark-theme-color-p-70: ${themeColorDark}b3;
    --dark-theme-color-p-80: ${themeColorDark}cc;
    --dark-theme-color-p-90: ${themeColorDark}e6;
}
`}
        ></style>

        <ClientRouter />
    </head>
    <body>
        <!-- Google Tag Manager (noscript) -->
        {gtmId && (
            <noscript>
                <iframe
                    src={`https://www.googletagmanager.com/ns.html?id=${gtmId}`}
                    height="0"
                    width="0"
                    style="display:none;visibility:hidden"></iframe>
            </noscript>
        )}
        <!-- End Google Tag Manager (noscript) -->
        <script
            is:inline
            async
            defer
            src={`https://www.googletagmanager.com/gtag/js?id=${gtagId}`}
        ></script>
        <script is:inline defer define:vars={{ gtagId }}>
            window.dataLayer = window.dataLayer || [];
            function gtag() {
                dataLayer.push(arguments);
            }
            gtag("js", new Date());

            gtag("config", gtagId);
        </script>

        <div class="root">
            <BannerAndHeader
                client:idle
                showBanner={showBanner}
                showHeader={showHeader}
                originPathname={Astro.originPathname}
                defaults={{
                    videoSource: Astro.cookies.get(VIDEO_SOURCE)?.value as ValidVideoSourceType,
                    forcedColorScheme: forcedColorScheme as 'dark' | 'light' | undefined,
                    contentListAutoLoadMore: contentListAutoLoadMore as ValidContentListAutoLoadMoreType,
                }}
            >
                <LogoSVG slot="logo" />
            </BannerAndHeader>

            <Announcements showHeader={showHeader} />

            <main><slot /></main>

            {showFooter && (
                <Footer>
                    <LogoSVG slot="logo" />
                </Footer>
            )}

            <Navbar
                showHeader={showHeader}
                originPathname={Astro.originPathname}
            />

            <PrepareClient client:only />
        </div>
    </body>
</html>

<style lang="less">
    @import "@/utils/mixins.less";

    html,
    body {
        margin: 0;
    }

    body {
        min-width: var(--body-safe-min-width);
    }

    .root {
        position: relative;
        z-index: var(--global-content-root-z-index);
        display: flex;
        flex-flow: column nowrap;
        min-height: -webkit-fill-available;
        min-height: 100dvh;

        & > main {
            flex: 1;
            position: static;
        }
    }
</style>

<script is:inline defer>
    document.documentElement.setAttribute("javascript-enabled", "");

    if (globalThis.window) {
        // 站外链接兜底为新窗口打开
        document.body.addEventListener("click", (evt) => {
            if (
                evt.target instanceof HTMLElement &&
                evt.target.tagName === "A" &&
                !evt.target.getAttribute("target")
            ) {
                const href = evt.target.getAttribute("href");
                if (href[0] === "/") return;
                if (href[0] === "#") return;
                if (/^(javascript|mailto|tel):/.test(href)) return;
                if (new RegExp(`^${location.origin}`).test(href)) return;
                evt.preventDefault();
                window.open(href, "_blank");
            }
        });
    }
</script>
