---
import { isUnderConstruction } from "@/global";

type Props = {
    showHeader: boolean;
};

const announcements: {
    type: "under-construction" | "info" | "warning" | "error";
    message?: string | HTMLElement;
}[] = isUnderConstruction
    ? [
          {
              type: "under-construction",
              message: `<strong>üöß ÊñΩÂ∑•‰∏≠ÔºåËØ∑‰Ω©Êà¥ÂÆâÂÖ®Â∏Ω ‚õëÔ∏è</strong>`,
          },
      ]
    : [];
---

{
    Array.isArray(announcements) && announcements.length > 0 && (
        <section
            class:list={[
                "announcements",
                {
                    "mod-has-header": Astro.props.showHeader === true,
                },
            ]}
        >
            {announcements.map(({ type, message }) => (
                <section class:list={["announcement", `announcement-${type}`]}>
                    <span class="message" set:html={message} />
                    {type === "under-construction" && (
                        <span class="background">
                            <span class="message" set:html={message} />
                        </span>
                    )}
                </section>
            ))}
        </section>
    )
}

<style lang="less">
    @import "@/utils/mixins.less";

    .announcements {
        position: sticky;
        z-index: var(--global-header-z-index);
        top: 0;

        &.mod-has-header {
            top: var(--global-header-height);
        }
    }

    .announcement {
        display: block;
        position: relative;
        width: 100%;
        user-select: none;
        .message {
            .block-wrapper();
            text-align: center;
        }
    }

    .announcement-under-construction {
        --color-dark: #111111;
        --color-dark-p-50: #11111180;
        --color-light: #ffd914;
        --color-light-p-50: #ffd91480;
        // font-size: 1.5em;
        font-weight: bolder;
        padding-top: 0.3333em;
        padding-bottom: 0.3333em;
        backdrop-filter: var(--backdrop-filter-glass);
        color: var(--color-light);
        .message {
            line-height: 2.3333em;
            padding: 0 1em;
        }
        & > .message {
            z-index: 2;
            // opacity: 0.6667;
        }
        & > .background {
            position: absolute;
            z-index: 1;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            padding: inherit;
            background: repeating-linear-gradient(
                45deg,
                var(--color-dark),
                var(--color-dark) 10px,
                var(--color-light) 10px,
                var(--color-light) 20px
            );
            color: transparent;
            opacity: 0.5;
            .message {
                :global(strong) {
                    display: inline-block;
                    background: var(--color-dark);
                    padding: inherit;
                    border-radius: 8px;
                }
            }
        }
        &::after {
            content: "";
            position: absolute;
            bottom: -1px;
            height: 1px;
            left: 0;
            right: 0;
            background: var(--color-dark-p-50);
        }
    }
</style>
