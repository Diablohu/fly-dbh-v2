@import "@/utils/mixins.less";

.video-list-horizontal {
    --items-in-view: 5;
    --item-gap: 1em;
    --item-scroll-snap-align: start;
    --scroll-container-scroll-padding: calc(
        var(--global-edge-safe-distance) + var(--item-gap) * 1.3333
    );

    position: relative;
    container-name: video-list-horizontal;
    container-type: inline-size;

    & > .scroll-container,
    & > .arrow-container {
        --item-width: calc(
            100% / var(--items-in-view) - var(--item-gap) -
                var(--global-edge-safe-distance) / var(--items-in-view)
        );
    }

    & > .scroll-container {
        position: relative;
        display: flex;
        gap: 1em;
        flex-flow: row nowrap;
        padding-left: var(--global-edge-safe-distance);
        padding-right: var(--global-edge-safe-distance);
        margin-left: calc(var(--global-edge-safe-distance) * -1);
        margin-right: calc(var(--global-edge-safe-distance) * -1);
        overflow: hidden;
        overflow-x: auto;
        // scrollbar-width: thin;
        scrollbar-width: none;
        scroll-snap-type: x mandatory;
        scroll-padding: var(--scroll-container-scroll-padding);

        .item {
            scroll-snap-align: var(--item-scroll-snap-align);
            flex: 1 0 var(--item-width);
        }

        .intersection-probe {
            flex: none;
            position: relative;
            width: 0;
            height: 0;
            margin-left: calc(var(--item-gap) * -1);
            &.intersection-probe-begin {
                left: var(--global-edge-safe-distance);
            }
            &.intersection-probe-end {
                right: var(--global-edge-safe-distance);
            }
        }
    }

    & > .arrow-container {
        --size: 40px;

        position: absolute;
        z-index: 10;
        top: 0;
        height: 0;
        width: var(--item-width);
        overflow: visible;
        pointer-events: none;

        // 占位：半个视频元素高度
        // 这样可以让箭头按钮在纵向永远在和视频元素的中间对齐
        &::before {
            position: relative;
            content: "";
            display: block;
            width: 0;
            height: 0;
            padding-bottom: percentage((0.5 * 9 / 16));
            // background: #f00;
        }

        & > .arrow {
            pointer-events: all;
            position: relative;
            z-index: 10;
            top: 50%;
            display: inline-block;
            appearance: none;
            border: 0;
            background: var(--theme-color-p-60);
            width: var(--size);
            height: var(--size);
            margin-top: calc(var(--size) * -0.5);
            border-radius: 100%;
            border: 1px solid var(--border-color);
            transition-property: transform, opacity, background-color, color;
            opacity: 0;
            pointer-events: none;
            backdrop-filter: var(--backdrop-filter-glass);
            color: var(--text-color-secondary);
            box-shadow: var(--overlay-box-shadow);

            & > svg {
                --size: 18px;
                width: var(--size);
                height: var(--size);
                position: absolute;
                top: 50%;
                left: 50%;
                margin-top: calc(var(--size) * -0.5);
                margin-left: calc(var(--size) * -0.5);
            }

            .pointer-hover({
                color: var(--text-color-primary);
                background-color: var(--theme-color-p-40);
            });
        }

        &.arrow-prev {
            left: 0;
            text-align: left;
            & > .arrow {
                margin-left: calc(2px - var(--global-edge-safe-distance));
                // & > svg {
                //     margin-left: calc(var(--size) * -0.5 - 1px);
                // }
            }
        }
        &.arrow-next {
            right: 0;
            text-align: right;
            & > .arrow {
                margin-right: calc(2px - var(--global-edge-safe-distance));
                // & > svg {
                //     margin-left: calc(var(--size) * -0.5 + 1px);
                // }
            }
        }
        &.is-active > .arrow {
            opacity: 1;
            pointer-events: all;
        }
    }

    &::before,
    &::after {
        content: "";
        position: absolute;
        z-index: 5;
        top: 0;
        bottom: 0;
        width: var(--global-edge-safe-distance);
        // pointer-events: none;
    }
    &::before {
        left: calc(var(--global-edge-safe-distance) * -1);
        background: linear-gradient(
            to right,
            var(--edge-gradient-color-from, var(--theme-color)) 33.3333%,
            transparent
        );
    }
    &::after {
        right: calc(var(--global-edge-safe-distance) * -1);
        background: linear-gradient(
            to left,
            var(--edge-gradient-color-from, var(--theme-color)) 33.3333%,
            transparent
        );
    }
}

@container video-list-horizontal (width < @screen-size-xl-plus-edge-safe-distance) {
    .scroll-container,
    .arrow-container {
        --items-in-view: 4;
    }
}

@container video-list-horizontal (width < @screen-size-lg-plus-edge-safe-distance) {
    .scroll-container,
    .arrow-container {
        --items-in-view: 3;
    }
}

@container video-list-horizontal (width < @screen-size-md-plus-edge-safe-distance) {
    .scroll-container,
    .arrow-container {
        --items-in-view: 2;
    }
}

@container video-list-horizontal (width < @screen-size-sm-plus-edge-safe-distance) {
    .scroll-container,
    .arrow-container {
        --items-in-view: 2;
    }
    // .scroll-container{
    //     --item-scroll-snap-align: center;
    // }
}

@container video-list-horizontal (width < @screen-size-xs) {
    .scroll-container,
    .arrow-container {
        --items-in-view: 1;
    }
    .scroll-container {
        --scroll-container-scroll-padding: var(--global-edge-safe-distance);
        --item-scroll-snap-align: center;
    }
}
