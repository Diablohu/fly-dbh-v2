---
import { actions } from "astro:actions";
import dayjs from "dayjs";
import { type VideoListPageTypesType } from "@/types";
import { specialTagsTutorial } from "@/global";
import getVideoListPageLink from "@/utils/get-video-list-page-link";
import { VIDEO_LIST_PAGE_CATEGORY_SWITCH_SMALL_SCREEN } from "@/constants/element-ids";

import MenuSvg from "@/assets/svg-symbols/menu.svg";

type Props = {
    category?: string;
    title: string;
    subTitle?: string;
    type?: VideoListPageTypesType;
    slug?: string;
    isIndex: boolean;
    info: Awaited<ReturnType<typeof actions.videoListPageFetchInfo>>["data"];
};
---

<Fragment>
    <h1>
        {!!Astro.props.category && <small>{Astro.props.category}</small>}
        <span
            >{
                Astro.props.type === "tag" &&
                Astro.props.slug &&
                specialTagsTutorial.includes(Astro.props.slug) ? (
                    <Fragment>
                        <a href={getVideoListPageLink("tag", "tutorial")}>
                            教程攻略
                        </a>{" "}
                        / {Astro.props.title}
                    </Fragment>
                ) : (
                    Astro.props.title
                )
            }</span
        >
        {!!Astro.props.subTitle && <small>{Astro.props.subTitle}</small>}
    </h1>

    {
        Astro.props.isIndex || Astro.props.type === "tag" ? null : (
            <section class="info">
                {Astro.props.type === "aerodrome" ? (
                    <dl>
                        <dt>代码</dt>
                        <dd>
                            {[Astro.props.info?.icao, Astro.props.info?.iata]
                                .filter(Boolean)
                                .join(" / ")}
                        </dd>
                    </dl>
                ) : Astro.props.type === "aircraftFamily" ? (
                    <dl>
                        <dt>机型</dt>
                        <dd>
                            {Array.isArray(Astro.props.info?.aircrafts) &&
                                Astro.props.info.aircrafts.length > 0 &&
                                Astro.props.info.aircrafts.map(
                                    (aircraft: {
                                        icao_code: unknown;
                                        name: unknown;
                                    }) => (
                                        <span class="tag">
                                            {aircraft.icao_code !==
                                                aircraft.name && (
                                                <span>
                                                    {aircraft.icao_code} /
                                                </span>
                                            )}
                                            {aircraft.name}
                                        </span>
                                    )
                                )}
                        </dd>
                    </dl>
                ) : Astro.props.type === "developer" ? (
                    <Fragment>
                        {Astro.props.info?.logo && (
                            <img
                                class="logo"
                                src={Astro.props.info.logo}
                                alt={Astro.props.info.name_full}
                            />
                        )}
                        {Astro.props.info?.links &&
                            Object.keys(Astro.props.info.links).length > 0 && (
                                <dl>
                                    <dt>链接</dt>
                                    <dd>
                                        {Object.entries(
                                            Astro.props.info.links
                                        ).map((l) => (
                                            <a
                                                href={l[1] as string}
                                                class="link"
                                            >
                                                {l[0] === "official"
                                                    ? "官网"
                                                    : l[0][0].toLocaleUpperCase() +
                                                      l[0].slice(1)}
                                            </a>
                                        ))}
                                    </dd>
                                </dl>
                            )}
                    </Fragment>
                ) : Astro.props.type === "platform" ? (
                    <Fragment>
                        {Array.isArray(Astro.props.info?.developers) &&
                            Astro.props.info.developers.length > 0 && (
                                <dl>
                                    <dt>开发</dt>
                                    <dd>
                                        {Astro.props.info.developers?.map(
                                            (developer: {
                                                _id: string;
                                                name: string;
                                                slug?: string;
                                            }) => (
                                                <span class="tag">
                                                    {developer.name}
                                                </span>
                                            )
                                        )}
                                    </dd>
                                </dl>
                            )}
                        {Astro.props.info?.links &&
                            Object.keys(Astro.props.info.links).length > 0 && (
                                <dl>
                                    <dt>链接</dt>
                                    <dd>
                                        {Object.entries(
                                            Astro.props.info.links
                                        ).map((l) => (
                                            <a
                                                href={l[1] as string}
                                                class="link"
                                            >
                                                {l[0] === "official"
                                                    ? "官网"
                                                    : l[0][0].toLocaleUpperCase() +
                                                      l[0].slice(1)}
                                            </a>
                                        ))}
                                    </dd>
                                </dl>
                            )}
                    </Fragment>
                ) : Astro.props.type === "platformUpdate" ? (
                    <dl>
                        <dt>发布</dt>
                        <dd>
                            {dayjs(Astro.props.info?.release).format(
                                "YYYY 年 M 月 D 日"
                            )}
                        </dd>
                    </dl>
                ) : Astro.props.type === "event" ? (
                    <dl>
                        <dt>类型</dt>
                        <dd>
                            {Astro.props.info?.type === 'exhibition' ? '展会' : ''}
                        </dd>
                    </dl>
                    <dl>
                        <dt>时间</dt>
                        <dd>
                            {[...new Set(
                                [
                                    dayjs(Astro.props.info?.start).format(
                                        "YYYY 年 M 月 D 日"
                                    ),
                                    dayjs(Astro.props.info?.end).format(
                                        "YYYY 年 M 月 D 日"
                                    )
                                ]
                            )].join(' ~ ')}
                        </dd>
                    </dl>
                ) : null}
            </section>
        )
    }
</Fragment>

<style lang="less">
    @import "@/utils/mixins.less";

    h1 {
        --extra-padding-left: 0px;
        --extra-margin-top: -0.2em;
        margin: var(--extra-margin-top)
            calc(var(--global-edge-safe-distance) * -1) 0.3333em
            calc(var(--global-edge-safe-distance) * -1);
        padding: 1em var(--global-edge-safe-distance) 0.6667em
            calc(var(--global-edge-safe-distance) + var(--extra-padding-left));
        line-height: 1.2;
        // position: sticky;
        // top: calc(var(--global-sticky-top) + var(--extra-margin-top));
        z-index: 5;
        // background-color: var(--global-header-background-color);
        // backdrop-filter: var(--global-header-backdrop-filter);
        small {
            display: block;
            font-weight: normal;
            font-size: 0.6667em;
            line-height: 1em;
            &:first-child {
                margin-bottom: 0.3333em;
            }
            &:last-child {
                margin-top: 0.3333em;
            }
        }
        a {
            text-decoration: none;
        }
        .screen-sm({
            --extra-margin-top: 1.5em;
        });
    }

    .info {
        // background: var(--tag-background-color);
        // background: linear-gradient(
        //     to bottom,
        //     var(--tag-background-color) -50%,
        //     transparent 66.6667%
        // );
        // background: radial-gradient(
        //     circle,
        //     var(--tag-background-color) 0%,
        //     transparent 50%
        // );
        // background-size: 100% 100%;
        // border-radius: 10px;
        padding: 1em 0;
        margin: 0 0 1.3333em 0;
        border-top: 1px solid var(--border-color);
        border-bottom: 1px solid var(--border-color);

        img.logo {
            max-width: 400px;
            width: 100%;
            display: block;
            margin: 0 auto;
        }

        dl {
            margin: 0;
            display: flex;
            flex-flow: row nowrap;
            dt {
                flex: 0 0 3em;
            }
            dd {
                margin: 0;
                font-weight: normal;
                color: var(--text-color-primary);
                display: flex;
                flex-flow: row wrap;
                gap: 0.75em 1em;
                & > * {
                    flex: 0;
                    white-space: nowrap;
                }
                .tag {
                    .tag-styles();
                    // margin-right: 0.25em;
                    background: inherit;
                    display: inline-block;
                    &:hover {
                        background: inherit;
                    }
                }
                .link {
                    display: inline-block;
                    vertical-align: top;
                    margin-right: 0.75em;
                }
            }
            &:has(dd:empty) {
                display: none;
            }
        }

        &:empty {
            display: none;
        }
    }
</style>
