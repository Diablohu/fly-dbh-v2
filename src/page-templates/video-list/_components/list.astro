---
import { actions } from "astro:actions";
import { type VideoListPageTypesType } from "@/types";
import VideoItem from "@/components/video-item";
import getVideoItemTopTag from "@/utils/get-video-item-top-tag";
import LLL from "./l2";

type Props = {
    type?: VideoListPageTypesType;
    slug?: string;
    isIndex: boolean;
};
const length = 20;

const { data, error: error } = await Astro.callAction(
    actions.videoListPageFetch,
    {
        type: Astro.props.type,
        slug: Astro.props.slug,
        from: 0,
        length,
    }
);
if (error) {
    console.trace(error);
    Astro.response.status = 500;
    // Astro.response.statusText = (error.cause || error.message || "") as string;
    return Astro.rewrite("/500");
}
---

<section class="list">
    <h1>
        {
            Astro.props.isIndex ? (
                "最新模拟飞行视频"
            ) : (
                <Fragment>
                    <small>{Astro.props.type}</small>
                    {Astro.params.slug}
                </Fragment>
            )
        }
    </h1>
    <hr />

    {
        Astro.props.isIndex ? null : (
            <Fragment>
                <section class="info">INFO: {Astro.params.slug}</section>
                <hr />
            </Fragment>
        )
    }

    <section class="video-list">
        {
            data.list.map((post) => (
                // TODO: tags by category
                <VideoItem
                    cmsId={post._id}
                    slug={post.slug}
                    title={post.title}
                    cover={post.cover}
                    tags={
                        // [
                        //     Astro.props.isIndex
                        //         ? getVideoItemTopTag(post, "latest")?.name || ""
                        //         : Astro.props.type === "tag" &&
                        //             Astro.props.slug === "review"
                        //         ? getVideoItemTopTag(post, "review")?.name || ""
                        //         : "",
                        // ].filter(Boolean)
                        []
                    }
                    infos={[
                        [
                            Astro.props.isIndex
                                ? getVideoItemTopTag(post, "latest")?.name || ""
                                : Astro.props.type === "tag" &&
                                    Astro.props.slug === "review"
                                  ? getVideoItemTopTag(post, "review")?.name ||
                                    ""
                                  : "",
                            new Date(post.release),
                        ].filter(Boolean),
                    ]}
                />
            ))
        }
        <LLL
            client:idle
            initialList={data.list}
            length={20}
            type={Astro.props.type}
            slug={Astro.props.slug}
            isIndex={Astro.props.isIndex}
        />
    </section>
    <hr />
    <p>
        Total: {data.total} | Page: {data.page} / {
            Math.ceil(data.total / length)
        } | TODO: Pagination
    </p>
</section>

<style lang="less">
    @import "@/utils/mixins.less";

    .list {
        flex: 1;
        order: 2;
        padding-top: 2em;
        padding-bottom: 4em;

        h1 {
            margin: 0;
        }

        .info {
            background: var(--tag-background-color);
            border-radius: 10px;
            padding: 1em;
        }

        .video-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2em 1em;
            padding: 1em 0;
        }
    }
</style>
